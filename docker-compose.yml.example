x-ml: &ml-config
  ML_CLIENT_ID: ''
  ML_CLIENT_SECRET: ''
  ML_URL: 'https://api.mercadolibre.com'
  ML_ACCESS_TOKEN: ''
  ML_REFRESH_TOKEN: ''

x-compose-jwt: &jwt-config
  JWT_SECRET: 'DO NOT USE THIS VALUE. INSTEAD, CREATE A COMPLEX SECRET AND KEEP IT SAFE OUTSIDE OF THE SOURCE CODE.'
x-compose-mssql: &mssql-config
  MSSQL_PASSWORD: &MSSQL_PASSWORD 'myPassword1234'
  MSSQL_DB: &MSSQL_DB 'pdesa'
  MSSQL_HOST: 'mssql_grupo8'
  MSSQL_PORT: '1433'
  MSSQL_USER: 'sa'
  MSSQL_SYNCHRONIZE: 'true'
  MSSQL_LOGGING: 'false'
  MSSQL_ENCRYPT: 'false'
  MSSQL_TRUST_CERT: 'true'
x-compose-backend-url: &BACKEND_URL http://localhost:3000/

services:
  prometheus_grupo8:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - pdesa

  grafana_grupo8:
    image: grafana/grafana-oss:latest
    ports:
      - 3002:3000
    restart: unless-stopped
    volumes:
      - ./grafana-data:/var/lib/grafana
    networks:
      - pdesa

  mssql_grupo8:
    image: 'mcr.microsoft.com/mssql/server@sha256:ea73825f3d88a23c355ac2f9fdc6bd960fec90171c12c572109b36a558f77bb8'
    ports:
      - '1433:1433'
    healthcheck:
      test:
        - 'CMD-SHELL'
        - "/opt/mssql-tools18/bin/sqlcmd -U sa -P $$MSSQL_SA_PASSWORD -Q 'SELECT 1' -C && /opt/mssql-tools18/bin/sqlcmd -U sa -P $$MSSQL_SA_PASSWORD -Q 'CREATE DATABASE $$MSSQL_DB' -C"
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_SA_PASSWORD: *MSSQL_PASSWORD
      MSSQL_DB: *MSSQL_DB
    networks:
      - pdesa

  backend_grupo8:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      <<: [*mssql-config, *ml-config, *jwt-config]
    restart: always
    depends_on:
      mssql_grupo8:
        condition: service_healthy
    networks:
      - pdesa

  frontend_grupo8:
    build:
      context: ../pdesa-frontend
      dockerfile: dockerfile
      args:
        VITE_SELF_VERSION: '-'
        VITE_BACKEND_URL: *BACKEND_URL
    ports:
      - '80:80'
    environment:
      VITE_SELF_VERSION: '-'
      VITE_BACKEND_URL: *BACKEND_URL
    restart: always
    networks:
      - pdesa

networks:
  pdesa:
